Index: app/src/main/java/com/pearlorganisation/figgo/UI/VerifyOtp.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.pearlorganisation.figgo.UI\r\n\r\nimport android.Manifest\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.os.Bundle\r\nimport android.os.CountDownTimer\r\nimport android.util.Log\r\nimport android.widget.*\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.constraintlayout.widget.ConstraintLayout\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.view.isVisible\r\nimport androidx.navigation.NavController\r\nimport com.android.volley.Response\r\nimport com.android.volley.VolleyError\r\nimport com.android.volley.toolbox.JsonObjectRequest\r\nimport com.android.volley.toolbox.Volley\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions\r\nimport com.google.android.gms.common.api.GoogleApiClient\r\nimport com.google.android.gms.location.FusedLocationProviderClient\r\nimport com.google.android.gms.location.LocationServices\r\nimport com.pearlorganisation.PrefManager\r\nimport com.pearlorganisation.figgo.R\r\nimport org.json.JSONObject\r\n\r\nclass VerifyOtp : AppCompatActivity() {\r\n\r\n    val URL = \"https://test.pearl-developer.com/figo/api/register\"\r\n\r\n    private val REQUEST_LOCATION = 1\r\n    private val RC_SIGN_IN = 1\r\n    private var mGoogleApiClient: GoogleApiClient? = null\r\n    lateinit var fusedLocationProviderClient: FusedLocationProviderClient\r\n    lateinit var nav_controller: NavController\r\n    lateinit var pref: PrefManager\r\n    private lateinit var mGoogleSignInClient: GoogleSignInClient\r\n    lateinit var cc_number: ConstraintLayout\r\n    lateinit var enteredOTP: EditText\r\n    lateinit var resend : TextView\r\n    lateinit var otp_Verify_button: Button\r\n    lateinit var progress: ProgressBar\r\n    lateinit var cTimer : CountDownTimer\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.fragment_verify_number)\r\n        pref = PrefManager(this)\r\n        enteredOTP = findViewById<EditText>(R.id.enteredOTP)\r\n        otp_Verify_button = findViewById<Button>(R.id.otp_Verify_button)\r\n        resend = findViewById<TextView>(R.id.resend)\r\n        otp_Verify_button.setOnClickListener {\r\n\r\n\r\n            if (enteredOTP.text.toString().equals(\"\") || enteredOTP.text.toString().equals(\"null\")) {\r\n                Toast.makeText(\r\n                    this@VerifyOtp,\r\n                    \"Enter Otp\",\r\n                    Toast.LENGTH_SHORT\r\n                ).show()\r\n\r\n            } else {\r\n                verifyOtp()\r\n            }\r\n        }\r\n\r\n        resend.setOnClickListener {\r\n\r\n            getotp()\r\n\r\n        }\r\n\r\n        startTimer()\r\n    }\r\n    private fun getotp(){\r\n        val URL = \"https://test.pearl-developer.com/figo/api/otp/send-otp\"\r\n        val queue = Volley.newRequestQueue(this@VerifyOtp)\r\n        val json = JSONObject()\r\n        json.put(\"type\", \"user\")\r\n        json.put(\"type_id\", pref.getUserId())\r\n        json.put(\"contact_no\", pref.getNumber())\r\n        Log.d(\"SendData\", \"json===\" + json)\r\n        val jsonOblect: JsonObjectRequest =\r\n            object : JsonObjectRequest(Method.POST, URL, json, object :\r\n                Response.Listener<JSONObject?> {\r\n                override fun onResponse(response: JSONObject?) {\r\n                    Log.d(\"SendData\", \"response===\" + response)\r\n                    if (response != null) {\r\n                        if (pref.getToken().equals(\"\") || pref.getToken().equals(\"null\")) {\r\n\r\n                            //  val token = response.getString(\"token\")\r\n                            //  pref.setToken(token)\r\n                            startTimer()\r\n                            pref.isValidLogin()\r\n                            Toast.makeText(\r\n                                this@VerifyOtp,\r\n                                \"Otp Send Successfully\",\r\n                                Toast.LENGTH_SHORT\r\n                            ).show()\r\n                            //  Log.d(\"SendData\", \"token===\" + token)\r\n                            //  startActivity(Intent(this@LoginActivity,MPinGenerate::class.java))\r\n                            /*  if (pref.getMpin().equals(\"\")) {\r\n                                  startActivity(\r\n                                      Intent(\r\n                                          this@LoginActivity,\r\n                                          MPinGenerate::class.java\r\n                                      )\r\n                                  )\r\n                              } else {\r\n                                  startActivity(\r\n                                      Intent(\r\n                                          this@LoginActivity,\r\n                                          DashBoard::class.java\r\n                                      )\r\n                                  )\r\n                              }*/\r\n\r\n                        } else {\r\n//                               val token = response.getString(\"token\")\r\n//                               pref.setToken(token)\r\n//                               Toast.makeText(this@LoginActivity,\"Login Successfully\",Toast.LENGTH_SHORT).show()\r\n//                               if(pref.getMpin().equals(\"\") || pref.getMpin().equals(\"null\")){\r\n//                                   startActivity(Intent(this@LoginActivity,MPinGenerate::class.java))\r\n//                               }else{\r\n//                                   startActivity(Intent(this@LoginActivity,MPinGenerate::class.java))\r\n//                               }\r\n//                               startActivity(Intent(this@LoginActivity,MPinGenerate::class.java))\r\n//                               if(pref.getMpin().equals(\"\") || pref.getMpin().equals(\"null\")){\r\n//                                   startActivity(Intent(this@LoginActivity,MPinGenerate::class.java))\r\n//                               }\r\n//                               else{\r\n//                                   startActivity(Intent(this@LoginActivity,DashBoard::class.java))\r\n//                               }\r\n                            startActivity(Intent(this@VerifyOtp, DashBoard::class.java))\r\n                        }\r\n\r\n                    }\r\n                    // Get your json response and convert it to whatever you want.\r\n                }\r\n            }, object : Response.ErrorListener {\r\n                override fun onErrorResponse(error: VolleyError?) {\r\n                    Toast.makeText(this@VerifyOtp, \"Something went wrong!\", Toast.LENGTH_LONG).show()\r\n                }\r\n            }) {\r\n                /*     @Throws(AuthFailureError::class)\r\n                override fun getHeaders(): Map<String, String> {\r\n                    val headers: MutableMap<String, String> = HashMap()\r\n                    headers[\"Authorization\"] = \"TOKEN\" //put your token here\r\n                    return headers\r\n                }*/\r\n            }\r\n\r\n        queue.add(jsonOblect)\r\n\r\n\r\n        //startActivity(Intent(this,MPinGenerate::class.java))\r\n\r\n    }\r\n\r\n\r\n    fun startTimer() {\r\n\r\n        cTimer = object : CountDownTimer(60000, 1000) {\r\n            override fun onTick(millisUntilFinished: Long) {\r\n                resend.setText(\"seconds remaining: \" + (millisUntilFinished / 1000).toString())\r\n            }\r\n\r\n            override fun onFinish() {\r\n                resend.setText(\"Re send OTP!\")\r\n\r\n            }\r\n        }\r\n        cTimer.start()\r\n    }\r\n\r\n    private fun verifyOtp(){\r\n        val URL = \" https://test.pearl-developer.com/figo/api/otp/check-otp\"\r\n        val queue = Volley.newRequestQueue(this@VerifyOtp)\r\n        val json = JSONObject()\r\n        json.put(\"type\", \"user\")\r\n        json.put(\"type_id\", pref.getUserId())\r\n        json.put(\"otp\", enteredOTP.text.toString())\r\n        Log.d(\"SendData\", \"json===\" + json)\r\n        val jsonOblect: JsonObjectRequest =\r\n            object : JsonObjectRequest(Method.POST, URL, json, object :\r\n                Response.Listener<JSONObject?> {\r\n                override fun onResponse(response: JSONObject?) {\r\n                    Log.d(\"SendData\", \"response===\" + response)\r\n                    if (response != null) {\r\n                        if (pref.getToken().equals(\"\") || pref.getToken().equals(\"null\")) {\r\n\r\n                              val token = response.getString(\"token\")\r\n                              pref.setToken(token)\r\n                            pref.isValidLogin()\r\n                            Toast.makeText(\r\n                                this@VerifyOtp,\r\n                                \"Login Successfully\",\r\n                                Toast.LENGTH_SHORT\r\n                            ).show()\r\n                            //  Log.d(\"SendData\", \"token===\" + token)\r\n                            //  startActivity(Intent(this@LoginActivity,MPinGenerate::class.java))\r\n                              if (pref.getMpin().equals(\"\")) {\r\n                                  startActivity(\r\n                                      Intent(\r\n                                          this@VerifyOtp,\r\n                                          MPinGenerate::class.java\r\n                                      )\r\n                                  )\r\n                              } else {\r\n                                  startActivity(\r\n                                      Intent(\r\n                                          this@VerifyOtp,\r\n                                          DashBoard::class.java\r\n                                      )\r\n                                  )\r\n                              }\r\n\r\n\r\n                        } else {\r\n//                               val token = response.getString(\"token\")\r\n//                               pref.setToken(token)\r\n//                               Toast.makeText(this@LoginActivity,\"Login Successfully\",Toast.LENGTH_SHORT).show()\r\n//                               if(pref.getMpin().equals(\"\") || pref.getMpin().equals(\"null\")){\r\n//                                   startActivity(Intent(this@LoginActivity,MPinGenerate::class.java))\r\n//                               }else{\r\n//                                   startActivity(Intent(this@LoginActivity,MPinGenerate::class.java))\r\n//                               }\r\n//                               startActivity(Intent(this@LoginActivity,MPinGenerate::class.java))\r\n//                               if(pref.getMpin().equals(\"\") || pref.getMpin().equals(\"null\")){\r\n//                                   startActivity(Intent(this@LoginActivity,MPinGenerate::class.java))\r\n//                               }\r\n//                               else{\r\n//                                   startActivity(Intent(this@LoginActivity,DashBoard::class.java))\r\n//                               }\r\n                            startActivity(Intent(this@VerifyOtp, DashBoard::class.java))\r\n                        }\r\n\r\n                    }\r\n                    // Get your json response and convert it to whatever you want.\r\n                }\r\n            }, object : Response.ErrorListener {\r\n                override fun onErrorResponse(error: VolleyError?) {\r\n                    Toast.makeText(this@VerifyOtp, \"Something went wrong!\", Toast.LENGTH_LONG).show()\r\n                }\r\n            }) {\r\n                /*     @Throws(AuthFailureError::class)\r\n                override fun getHeaders(): Map<String, String> {\r\n                    val headers: MutableMap<String, String> = HashMap()\r\n                    headers[\"Authorization\"] = \"TOKEN\" //put your token here\r\n                    return headers\r\n                }*/\r\n            }\r\n\r\n        queue.add(jsonOblect)\r\n\r\n\r\n        //startActivity(Intent(this,MPinGenerate::class.java))\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pearlorganisation/figgo/UI/VerifyOtp.kt b/app/src/main/java/com/pearlorganisation/figgo/UI/VerifyOtp.kt
--- a/app/src/main/java/com/pearlorganisation/figgo/UI/VerifyOtp.kt	(revision 6d020dcc701e5d9a44a1b505e7fb9405592049a0)
+++ b/app/src/main/java/com/pearlorganisation/figgo/UI/VerifyOtp.kt	(date 1673693540627)
@@ -1,5 +1,5 @@
 package com.pearlorganisation.figgo.UI
-
+//Neeraj
 import android.Manifest
 import android.content.Intent
 import android.graphics.Color
